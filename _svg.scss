/*------------------------------------------------------------------------------------------------*\
    Fall-Back SVG Pattern v1.0
    
    Clarification for self:
    Since this pattern is intented for use on logos, and since logos are an integral part of
    branding, this pattern is not ONLY intended as a CSS fallback.
    The markup is really important to provide an image of the logo even if CSS fails or is cut.
    
    However, since these patterns are intended for use with the CSS Mustard Cut (original) then 
    styles for older browsers can be omitted her since they won't load.
\*------------------------------------------------------------------------------------------------*/

$fallback-svg--fixed-height:      100px !default;


$fallback-svg--padding:           0 !default;


$fallback-svg--border-width:      0 !default;
$fallback-svg--border-style:      solid !default;
$fallback-svg--border-color:      #333 !default;

$fallback-svg--border-width--alt: $fallback-svg--border-width !default;
$fallback-svg--border-style--alt: $fallback-svg--border-width !default;
$fallback-svg--border-color--alt: $fallback-svg--border-width !default;


$fallback-svg--link-bg-color:     transparent !default;
$fallback-svg--link-bg-color-alt: transparent !default;

/*
	Make the container fit the content.
    Note: `*:not(body)` avoids clash with Modernizr-added class.
    1. IE9 needs this to avoid extra height. (Others too?)
*/
.svg:not(html) {
    display: inline-block;
	max-width: 100%;
    vertical-align: middle; /* [1] */
}

/*
	Zero out any inherited margins and padding for child elements.
    Note: `*:not(body)` avoids clash with Modernizr-added class.
*/
.svg > *:not(body) {
    margin: 0;
	padding: 0;
}

    /*
        1. Make the link fit the content.
        2. Provide positioning context for the pseudo element.
        3. Remove underline on some older browsers (Android 2.x mainly)
        4. IE9 needs this to avoid extra height. (Others too?)
    */
    .svg .svg__link {
        display: inline-block;  /* [1] */
        position: relative;     /* [2] */
        text-decoration: none;  /* [3] */
        vertical-align: middle; /* [4] */

        background-color: $fallback-svg--link-bg-color;

        border-width: $fallback-svg--border-width;
        border-style: $fallback-svg--border-style;
        border-color: $fallback-svg--border-color;
    }

    .svg .svg__link:hover,
    .svg .svg__link:active,
    .svg .svg__link:focus {
        text-decoration: none;
        background-color: $fallback-svg--link-bg-color-alt;
        
        // Repeat border setting even if 0 to override other hover rules:
        border-width: $fallback-svg--border-width--alt;
        border-style: $fallback-svg--border-style--alt;
        border-color: $fallback-svg--border-color--alt;
    }

    /*
        Objects inside links prevent the link from functioning, this hack fixes
        that. `pointer-events: none;` would solve it but support isn't good
        enough (http://caniuse.com/#search=pointer-events).

        1. This is needed for IE9+ or hover effects don't work over images
           embedded in the SVG.
    */
    .svg .svg__link:after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: rgba(0,0,0,0); /* [1] */
    }

    /*
        1. Remove gap below.
    */
    .svg .svg__image {
        vertical-align: top;  /* [1] */
    }

    /*
        1. Prevent pointer-events blocking link action in supporting browsers.
    */
    .svg .svg__link .svg__image {
        pointer-events: none; /* [1] */
    }

    /*
        Allows the fallback text to show ONLY if CSS is available AND the SVG fails to load (the PNG is 
        hidden if SVG is supported so that won't be an issue).
    */
    .svg .svg__fallback-text-alpha::before {
        content: attr(data-content);
    }

    /*
        Hide the fallback text ONLY if CSS is available (but not from screenreaders).
    */
    .svg .svg__fallback-text-beta {
        border: 0;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }

    /*------ Fixed Height ------*/
    /*
        Set this to your required height.
        If you need more variants, create separate modification classes instead.
    */

    /*
        NOTE: FF 32- (XP and Win8) seems to set a 3xheight width on initial page load / force refresh.
        If any relevent properties are altered or page is normally refreshed, it snaps to the correct 
        width. UNRESOLVED.
    */


@mixin svg--fixed-height($height, $name:"svg--fixed-height", $padding:$fallback-svg--padding, $border:$fallback-svg--border-width) {
    @if $padding > 0 {

        .#{$name} {
            height: $height;
            max-height: $height;
        }

        $height: $height - ($padding * 2) - ($border * 2);

        .#{$name} .svg__link,
        .#{$name} .svg__image {
            height: $height;
            max-height: $height;
        }

        .#{$name} .svg__link {
            padding: $padding;
            -webkit-box-sizing: content-box;
            -moz-box-sizing: content-box;
            box-sizing: content-box;
        }

    } @else {

        .#{$name},
        .#{$name} .svg__link,
        .#{$name} .svg__image {
            height: $height;
            max-height: $height;
        }

    }

    /*
        1. Allow pattern to contract.
    */
    .#{$name} .svg__link,
    .#{$name} .svg__image {
        max-width: 100%; /* [1] */
    }
    
    /*
        Allow the fallback image to scale properly.
        1. IE6 - can be removed if unnecessary.
    */
    .#{$name} .svg__fallback-image {
        max-width: 100%;
        max-height: $height;
        height: auto;
        //_height: $height; /* [1] */
    }
}

@include svg--fixed-height($fallback-svg--fixed-height);


/*------ Fluid ------*/
//@mixin svg-fluid($height, $name:"svg--fixed-height", $padding:$fallback-svg--padding, $border:$fallback-svg--border-width) {
@mixin svg--fluid($name:"svg--fluid") {
    /*
       1. Force the svg wrapper and link to fill their containers.
    */
    .#{$name},
    .#{$name} .svg__link {
        display: block; /* [1] */
        width: 100%;    /* [1] */
    }


    @if $fallback-svg--padding > 0 {
        .#{$name} .svg__link {
            padding: $fallback-svg--padding;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }
    }

    /*
       1. Force the object and fallback image to proportionally fill their
          containers, overriding attribute values.
    */
    .#{$name} .svg__image,
    .#{$name} .svg__fallback-image {
        height: auto; /* [1] */
        width: 100%;  /* [1] */
    }

    @if $fallback-svg--padding > 0 {
        .#{$name} .svg__fallback-text {
            position: relative;
            left: $fallback-svg--padding;
        }
    }
}

@include svg--fluid();


///*----------------------------------------*\
//    Old Browser Hacks
//\*----------------------------------------*/
//
///* Old Android (2.3) hacks: */
//@media screen and (min-width: 0\-) {
//    /*
//        Old Android supports ::pseudo elements but NOT SVG, thus both the PNG AND the fallback text
//        are shown, so we need to hide it: (overqualified to increase specificity.)
//    */
//    .svg__fallback-text-alpha {
//        display: none;
//    }
//}

/*------------------------------------------------------------------------------------------------*/
